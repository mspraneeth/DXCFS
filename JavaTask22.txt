package com.myapp.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Employee {

String firstName;
String lastName;
@Id
String empId;
int age;
public String getFirstName() {
return firstName;
}
public void setFirstName(String firstName) {
this.firstName = firstName;
}
public String getLastName() {
return lastName;
}
public void setLastName(String lastName) {
this.lastName = lastName;
}
public String getEmpId() {
return empId;
}
public void setEmpId(String empId) {
this.empId = empId;
}
public int getAge() {
return age;
}
public void setAge(int age) {
this.age = age;
}
public Employee(String firstName, String lastName, String empId, int age) {
super();
this.firstName = firstName;
this.lastName = lastName;
this.empId = empId;
this.age = age;
}

public Employee() {
// TODO Auto-generated constructor stub
}
@Override
public String toString() {
return "Employee [firstName=" + firstName + ", lastName=" + lastName + ", empId=" + empId + ", age=" + age
+ "]";
}



}

-----------------------

package com.myapp.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Order;

import com.myapp.model.Employee;

public class EmployeeDao {


SessionFactory factory;

public EmployeeDao() {

factory=new Configuration().configure().buildSessionFactory();

}


public String generateEmployeeId(String fname,String lname){
String employeeId="";
String seqNum="";
int seqNumber=0;
try{
String sql="select seqplayer.nextval from dual";


Session session= factory.openSession();
Query query=session.createSQLQuery(sql);

seqNumber=Integer.parseInt(query.getSingleResult().toString());

if(seqNumber < 100 && seqNumber >=10)
seqNum="0"+seqNumber;
else if(seqNumber<10)
seqNum="00"+seqNumber;
else
seqNum=""+seqNumber;

employeeId=fname.substring(0,2)+lname.substring(0,2)+seqNum;

return employeeId;
}
catch (Exception e) {
e.printStackTrace();
}

return "";
}



public String saveEmployee(Employee employee)
{

try
{
Session session= factory.openSession();

Transaction tx= session.beginTransaction();
employee.setEmpId(generateEmployeeId(employee.getFirstName(),employee.getLastName()));

//System.out.println(employee.getEmpId());

session.save(employee);
tx.commit();
return "employee saved";
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return "cannot create employee";

}



public List<Employee> getTopThreeEmployees()    
{
try
{
Session session= factory.openSession();
Transaction tx=session.beginTransaction();

Criteria ct=session.createCriteria(Employee.class);

ArrayList<Employee> employees=(ArrayList<Employee>)ct.setMaxResults(3).list();

tx.commit();
return employees;
}
catch (Exception e) {
e.printStackTrace();
}
finally {
factory.close();
}

return null;

}


public List<Employee> getTopFiveEmployees()    
{
try
{
Session session= factory.openSession();
Transaction tx=session.beginTransaction();

Criteria ct=session.createCriteria(Employee.class);

ct.addOrder(Order.desc("age"));

ArrayList<Employee> employees=(ArrayList<Employee>)ct.setMaxResults(3).list();

tx.commit();
return employees;
}
catch (Exception e) {
e.printStackTrace();
}
finally {
factory.close();
}

return null;

}


}




----------------

package com.myapp.service;

import java.util.ArrayList;

import com.myapp.dao.EmployeeDao;
import com.myapp.model.Employee;

public class EmployeeService {

	public static void main(String[] args) {
		/*
		 * EmployeeDao dao=new EmployeeDao(); Employee employee=new Employee("shikar",
		 * "dhawan", "", 33); System.out.println(dao.saveEmployee(employee));
		 * 
		 */
		
EmployeeDao dao=new EmployeeDao();
		
		//ArrayList<Employee> employees=(ArrayList<Employee>)dao.getTopThreeEmployees();
		
		ArrayList<Employee> employees=(ArrayList<Employee>)dao.getTopFiveEmployees();
		
		for(Employee employee1:employees)
		{
			System.out.println(employee1);
		}
		
		
		  
				

	}

}

