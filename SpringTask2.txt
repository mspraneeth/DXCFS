package com.myspr.demo;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.myspr.demo.Model.Author;
import com.myspr.demo.dao.AuthorDao;


@Controller
public class HomeController {

@Autowired
AuthorDao dao;



@RequestMapping(value="/")
public String home(Model model)
{
return "home";
}

@RequestMapping(value="/display")
public String display(Model model,@ModelAttribute Author author)
{
String status=dao.saveAuthor(author);
model.addAttribute("status",status);
return "display";
}

@RequestMapping(value="/authorsByCity")
public String authorsByCity(Model model,@RequestParam("city") String city)
{
ArrayList<Author> author=dao.getByCity(city);
model.addAttribute("author",author);
return "displayByCity";
}

@RequestMapping(value="/authorsByName")
public String authorsByName(Model model,@RequestParam("authorName") String authorName)
{
ArrayList<Author> author=dao.getByName(authorName);
model.addAttribute("author",author);
return "displayByName";
}

@RequestMapping(value="/deleteByName")
public String deleteByName(Model model,@RequestParam("authorName") String authorName)
{
String status=dao.deleteAuthor(authorName);
model.addAttribute("status",status);
return "display";
}




@RequestMapping(value="/updatePage")
public String update()
{
return "updatePage";
}

int authorId=0;

@RequestMapping(value="/searchForUpdate")
public String searchForUpdate(Model model,@RequestParam("authorId") String authorId)
{
int authId=Integer.parseInt(authorId);
this.authorId=authId;
Author author=dao.getAuthorById(authId);
model.addAttribute(author);
return "updatePage";
}


@RequestMapping(value="/updateData")
public String updateData(@ModelAttribute Author author)
{
author.setAuthorId(authorId);
dao.updateAuthorById(author);
return "updatePage";
}



}

--------------------------------------------


package com.myspr.demo.dao;

import java.util.ArrayList;

import javax.transaction.Transactional;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.myspr.demo.Model.Author;

@Transactional
public class AuthorDao {


@Autowired
SessionFactory factory;


public AuthorDao() {
// TODO Auto-generated constructor stub
}


public AuthorDao(SessionFactory factory) {
super();
this.factory = factory;
}


public String saveAuthor(Author author){
try{
Session session=factory.getCurrentSession();
session.save(author);
return "Author Created";
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return "cannot create Author";
}

public Author getAuthorById(int authorId){
try{
Session session=factory.getCurrentSession();
Author author=(Author)session.get(Author.class,authorId);
return author;
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return null;
}


public ArrayList<Author> getByCity(String city){
	
	Session session=factory.openSession();
		
	
	Criteria ct=session.createCriteria(Author.class);
	ct.add(Restrictions.ilike("city", city));
	
	ArrayList<Author> author=(ArrayList<Author>) ct.list();
	System.out.println(author);
	return author;
}


public ArrayList<Author> getByName(String authorName){
	
	Session session=factory.openSession();
	
	Criteria ct=session.createCriteria(Author.class);
	ct.add(Restrictions.ilike("authorName", authorName));
	
	ArrayList<Author> author=(ArrayList<Author>) ct.list();
	System.out.println(author);
	return author;
}


public String deleteAuthor(String authorName){
try{
Session session=factory.getCurrentSession();
Query query=session.createQuery("delete from Author a  where a.authorName=:authorname");
query.setParameter("authorname", authorName);
int count=query.executeUpdate();
if(count>0)
	return "Entry deleted";
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return "cannot delete entry";
}



public String updateAuthorById(Author author){
try{
Session session=factory.getCurrentSession();

System.out.println("author "+author);
session.update("Author",author);
return "Author Updated";
}
catch (Exception e) {
// TODO: handle exception
e.printStackTrace();
}

return "Cannot Update Auhtor";
}


}

----------------------------------------------


package com.myspr.demo.Model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Author {

@Id
int authorId;
String authorName;

public Author() {
// TODO Auto-generated constructor stub
}

@Override
public String toString() {
return "Author [authorId=" + authorId + ", authorName=" + authorName + ", city=" + city + "]";
}

public Author(int authorId, String authorName, String city) {
super();
this.authorId = authorId;
this.authorName = authorName;
this.city = city;
}
public int getAuthorId() {
return authorId;
}
public void setAuthorId(int authorId) {
this.authorId = authorId;
}
public String getAuthorName() {
return authorName;
}
public void setAuthorName(String authorName) {
this.authorName = authorName;
}
public String getCity() {
return city;
}
public void setCity(String city) {
this.city = city;
}
String city;




}

----------------------------------------------------


<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
<title>Home</title>
</head>
<body>
<h1>
Hello world!  
</h1>

<P>  ${status} </P>
</body>
</html>

-------------------

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Authors</title>
</head>
<body>
<table border="border" width="80%">
<tr> <td> AuthorId </td> <td> Name </td> <td> City </td>  </tr>
<c:forEach items="${author}" var="author">
<tr>
<td> ${author.authorId}</td>
<td> ${author.authorName} </td>
<td> ${author.city} </td>
</tr>
</c:forEach>

</table>
</body>
</html>

--------------------------


<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Authors</title>
</head>
<body>
<table border="border" width="80%">
<tr> <td> AuthorId </td> <td> Name </td> <td> City </td>  </tr>
<c:forEach items="${author}" var="author">
<tr>
<td> ${author.authorId}</td>
<td> ${author.authorName} </td>
<td> ${author.city} </td>
</tr>
</c:forEach>

</table>
</body>
</html>

-------------------------


<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
<title>Home</title>
<link href="<c:url value="/resources/css/mystyle.css" />" rel="stylesheet">

</head>
<body>
<h1>
Hello Author, please provide your details!  
</h1>
<form action="display">

Name:<input type="text" name="authorName">
<br>
Id:<input type="text" name="authorId">
<br>City: <input type="text" name="city">
<br>
<input type="submit" name="save author">
</form>
<br><br>
<h2>Search Authors by City</h2>

<form action="authorsByCity">

City: <select name="city">
<option value="Bengaluru">Bengaluru</option>
<option value="Chennai">Chennai</option>
<option value="Hyderabad">Hyderabad</option>
<option value="Mumbai">Mumbai</option>
</select>
<input type="submit">
</form>
<br><br>
<h2>Search Authors by Name</h2>
<form action="authorsByName">
Name:<input type="text" name="authorName">
<input type="submit">
</form>
<br><br>
<h2>Delete Entry by Author Name</h2>
<form action="deleteByName">
Name:<input type="text" name="authorName">
<input type="submit">
</form>

<h1>Click below button to update details</h1>

<form action="updatePage">
<input type="submit" value="Update">
</form>





</body>
</html>

---------------------------------

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
<title>Update</title>
</head>
<body>
<h1>
Hello Author PLz Update ur Details!  
</h1>
<form action="searchForUpdate">
Id:<input type="text" name="authorId" value="${author.authorId}">
<input type="submit" value="search">
</form>


<form action="updateData">
Name:<input type="text" name="authorName" value="${author.authorName}">
<br>
<br>City: <input type="text" name="city" value="${author.city}">
<br>
<input type="submit" value="update author">
</form>

</body>
</html>
