package com.myserv.model;

import java.util.Date;

public class Product {

	int prodId;
	String prodName;
	float prodPrice;
	Date mfd;
	String colour;
	Date expDate;
	public int getProdId() {
	return prodId;
	}
	public void setProdId(int prodId) {
	this.prodId = prodId;
	}
	public String getProdName() {
	return prodName;
	}
	public void setProdName(String prodName) {
	this.prodName = prodName;
	}
	public float getProdPrice() {
	return prodPrice;
	}
	public void setProdPrice(float prodPrice) {
	this.prodPrice = prodPrice;
	}
	public Date getMfd() {
	return mfd;
	}
	public void setMfd(Date mfd) {
	this.mfd = mfd;
	}
	public String getColour() {
	return colour;
	}
	public void setColour(String colour) {
	this.colour = colour;
	}
	public Date getExpDate() {
	return expDate;
	}
	public void setExpDate(Date expDate) {
	this.expDate = expDate;
	}
	public Product(int prodId, String prodName, float prodPrice, Date mfd, String colour, Date expDate) {
	super();
	this.prodId = prodId;
	this.prodName = prodName;
	this.prodPrice = prodPrice;
	this.mfd = mfd;
	this.colour = colour;
	this.expDate = expDate;
	}


	public Product() {
	// TODO Auto-generated constructor stub
	}
	@Override
	public String toString() {
	return "Product [prodId=" + prodId + ", prodName=" + prodName + ", prodPrice=" + prodPrice + ", mfd=" + mfd
	+ ", colour=" + colour + ", expDate=" + expDate + "]";
	}


}

---------------------------

package com.myserv.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;

import com.myserv.dbutil.DbConnection;
import com.myserv.model.Product;


public class ProductDao {
	
	public String saveProduct(Product product)
	{

	try{
	Connection con= DbConnection.getConnect();
	String sql="insert into products values(?,?,?,?,?,?)";
	PreparedStatement stat=con.prepareStatement(sql);

	stat.setInt(1, product.getProdId());
	stat.setString(2, product.getProdName());
	stat.setFloat(3, product.getProdPrice());
	stat.setDate(4, new java.sql.Date(product.getMfd().getTime()));
	stat.setString(5, product.getColour());
	stat.setDate(6, new java.sql.Date(product.getExpDate().getTime()));


	int res= stat.executeUpdate();
	if(res>0)
	return "Product Created";


	}
	catch (Exception e) {
	// TODO: handle exception
	e.printStackTrace();
	}
	return "cannot create product";
	}
	
	
	public ArrayList<Product> getAllProducts()
	{
	try
	{

	Connection con=DbConnection.getConnect();
	String sql="select * from products";

	PreparedStatement stat=con.prepareStatement(sql);
	ResultSet rs= stat.executeQuery();

	ArrayList<Product> productList=new ArrayList<>();

	while(rs.next())
	{
	int prodId= rs.getInt("prod_id");
	String prodName= rs.getString("prod_name");
	float prodPrice= rs.getFloat("prod_price");
	Date mfd= rs.getDate("mfd");
	String colour= rs.getString("colour");
	Date expDate=rs.getDate("exp_date");

	Product product=new Product(prodId, prodName, prodPrice, mfd, colour, expDate);

	productList.add(product);

	}

	return productList;

	}
	catch (Exception e) {
	// TODO: handle exception
	e.printStackTrace();
	}
	return null;
	}
	
	
	
public String deleteProduct(int productId) {
		
		
		try {
		
		Connection con=DbConnection.getConnect();
		String sql="delete from products where prod_id=?";
		
		PreparedStatement stat=con.prepareStatement(sql);
		
		stat.setInt(1,productId);
		
		int res= stat.executeUpdate();
		
		if(res>0) {
			return "product deleted";
			
		}
		else {
			
			return "product not found";
		}
		
		
		} 
		
		
		catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return "Exception "+e;
		}
		
	}





	
		public ArrayList<Product> searchByName(String productName)
		{
		try
		{
		
		Connection con=DbConnection.getConnect();
		String sql="select * from products where prod_name=?";
		
		PreparedStatement stat=con.prepareStatement(sql);
		stat.setString(1,productName);
		ResultSet rs= stat.executeQuery();
		
		ArrayList<Product> productList=new ArrayList<>();
		
		while(rs.next())
		{
		int prodId= rs.getInt("prod_id");
		String prodName= rs.getString("prod_name");
		float prodPrice= rs.getFloat("prod_price");
		Date mfd= rs.getDate("mfd");
		String colour= rs.getString("colour");
		Date expDate=rs.getDate("exp_date");
		
		Product product=new Product(prodId, prodName, prodPrice, mfd, colour, expDate);
		
		productList.add(product);
		
		}
		
		return productList;
		
		}
		catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}
		return null;
		}
			
			



	

}

---------------------------

package com.myserv.dbutil;

import java.sql.Connection;
import java.sql.DriverManager;

public class DbConnection {

public static Connection getConnect() {
		
		try{
			Class.forName("oracle.jdbc.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@192.168.0.5:1521:xe", "dxcfs","pass");
			return con;
			}
			catch (Exception e) {
			e.printStackTrace();
			return null;
			}
			}
}

------------------------------

package com.myserv.demo;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.myserv.dao.ProductDao;
import com.myserv.model.Product;


@WebServlet("/DeleteProduct")
public class DeleteProduct extends HttpServlet {
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		int prodId=Integer.parseInt(request.getParameter("prodelete"));
		
		PrintWriter out= response.getWriter();
		response.setContentType("text/html");
		ProductDao dao=new ProductDao();
	out.print(dao.deleteProduct(prodId));
		
	
	}

}

----------------------

package com.myserv.demo;

import java.io.IOException;
import java.util.ArrayList;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;



import com.myserv.dao.ProductDao;
import com.myserv.model.Product;


@WebServlet("/GetProducts")
public class GetProducts extends HttpServlet {
	
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		ProductDao dao=new ProductDao();
		ArrayList<Product> productList=  dao.getAllProducts();

		HttpSession session= request.getSession();
		session.setAttribute("productList", productList);


		RequestDispatcher rd= request.getRequestDispatcher("displayProduct.jsp");
		rd.forward(request, response);


	
	
	}

	
	

}

-----------------------

package com.myserv.demo;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.myserv.dao.ProductDao;
import com.myserv.model.Product;

@WebServlet("/SaveServlet")
public class SaveServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    
    public SaveServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		int prodId=Integer.parseInt(request.getParameter("prodId"));
		String prodName=request.getParameter("prodName");
		float prodPrice=Float.parseFloat(request.getParameter("prodPrice"));
		String mfdStr= request.getParameter("mfd");
		String prodColour=request.getParameter("prodColour");
		String expDateStr=request.getParameter("expDate");

		Date mfd=null;
		Date expDate=null;

		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		try
		{
		mfd=sdf.parse(mfdStr);
		expDate=sdf.parse(expDateStr);
		}
		catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}

		Product product=new Product(prodId, prodName, prodPrice, mfd, prodColour, expDate);

		PrintWriter out= response.getWriter();
		response.setContentType("text/html");
		ProductDao dao=new ProductDao();
		out.print(dao.saveProduct(product));

	
	
	}

}

-------------------------

package com.myserv.demo;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.myserv.dao.ProductDao;
import com.myserv.model.Product;


@WebServlet("/SearchProduct")
public class SearchProduct extends HttpServlet {
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String prodName=request.getParameter("prodname");
		
		ProductDao dao=new ProductDao();
		ArrayList<Product> productList=  dao.searchByName(prodName);

		HttpSession session= request.getSession();
		session.setAttribute("productList", productList);
	
	
	RequestDispatcher rd= request.getRequestDispatcher("displayProduct.jsp");
	rd.forward(request, response);
	
	}

}

------------------------------

<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>

<form action="DeleteProduct">
Enter the product Id to delete <input type="text" name="prodelete">
<input type="submit" value="delete">
</form>

</body>
</html>

-------------------

<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>

<form action="SaveServlet">
Product Id :<input type="text" name="prodId">
<br>

Product Name :<input type="text" name="prodName">
<br>

Product Price :<input type="text" name="prodPrice">
<br>
Mfd :<input type="date" name="mfd">
<br>


Product Colour :<input type="text" name="prodColour">
<br>

Exp Date :<input type="date" name="expDate">
<br>

<input type="submit">
</form>

<form action="GetProducts">
<input type="submit" value="display all products">
</form>

</body>
</html>

---------------------

<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="SearchProduct">
Enter the product Name<input type="text" name="prodname">
<input type="submit" value="search">
</form>
</body>
</html>

-----------------


<%@page import="com.myserv.model.Product"%>
<%@page import="java.util.ArrayList"%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<style type="text/css">

td
{
background-color: aqua;
font-family:comic sans ms;
font-size: 25px;
}

</style>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<table width="90%" >
<tr> <td>Product Id  </td> <td>Product Name  </td> <td>Product price </td> <td>Mfd  </td> <td>Colour  </td> <td>Exp Date  </td> </tr>
<%-- 
<%

ArrayList<Product> productList=(ArrayList<Product>) session.getAttribute("productList");

for(Product product:productList)
{
out.print("<tr>");

out.print("<td>"+product.getProdId()+"</td>");
out.print("<td>"+product.getProdName()+"</td>");
out.print("<td>"+product.getProdPrice()+"</td>");
out.print("<td>"+product.getMfd()+"</td>");
out.print("<td>"+product.getColour()+"</td>");
out.print("<td>"+product.getExpDate()+"</td>");

out.print("</tr>");
}


%>


 --%>

<c:forEach var="name" items="${productList}">

 <tr>
 <td>
 <c:out value="${name.prodId}"/>
 
 </td>
 
 <td>
 <c:out value="${name.prodName}"/>
 
 </td>
 
 <td>
 <c:out value="${name.prodPrice}"/>
 
 </td>
 
 <td>
 <c:out value="${name.mfd}"/>
 
 </td>
 
 <td>
 <c:out value="${name.colour}"/>
 
 </td>
 
 <td>
 <c:out value="${name.expDate}"/>
 
 </td>

 
 </tr>
 
 
</c:forEach>



</table>
</body>
</html>